# golangci-lint configuration
# https://golangci-lint.run/usage/configuration/

run:
  timeout: 5m
  tests: true
  go: "1.22"

linters:
  enable:
    - gofmt
    - goimports
    - govet
    - errcheck
    - staticcheck
    - unused
    - gosimple
    - ineffassign
    - typecheck
    - gosec
    - gocritic
    - revive
    - misspell
    - gocyclo
    - dupl
    - goconst
    - gocognit
    - depguard
    - copyloopvar
    - exhaustive
    - gomodguard
    - grouper
    - importas
    - nilerr
    - predeclared
    - thelper
    - tparallel
    - unconvert
    - wastedassign
    - whitespace
    - gosec

linters-settings:
  gofmt:
    simplify: true
  goimports:
    local-prefixes: github.com/evertoncolling/poc-requests-go
  govet:
    shadow: true
  revive:
    rules:
      - name: blank-imports
      - name: context-keys-type
      - name: time-naming
      - name: var-declaration
      - name: unexported-return
      - name: errorf
      - name: context-as-argument
      - name: dot-imports
      - name: error-return
      - name: error-strings
      - name: error-naming
      - name: if-return
      - name: increment-decrement
      - name: var-naming
      - name: package-comments
      - name: range
      - name: receiver-naming
      - name: indent-error-flow
  errcheck:
    check-type-assertions: true
    check-blank: true
  gocritic:
    enabled-tags:
      - diagnostic
      - performance
      - style
    disabled-checks:
      - hugeParam
      - rangeValCopy
  gocyclo:
    min-complexity: 15
  dupl:
    threshold: 100
  goconst:
    min-len: 2
    min-occurrences: 2
  misspell:
    locale: US
  gocognit:
    min-complexity: 20
  depguard:
    rules:
      main:
        deny:
          - pkg: "github.com/sirupsen/logrus"
            desc: "Use standard library log/slog instead"
          - pkg: "github.com/pkg/errors"
            desc: "Use standard library errors package"
  gomodguard:
    blocked:
      modules:
        - github.com/pkg/errors:
            recommendations:
              - errors
              - fmt
            reason: "Use standard library errors package"

issues:
  exclude-rules:
    # Exclude some linters from running on tests files.
    - path: _test\.go
      linters:
        - gocyclo
        - errcheck
        - dupl
        - gosec
        - goconst
        - gocognit
    # Exclude lll issues for long lines with go:generate
    - linters:
        - lll
      source: "^//go:generate "
    # Exclude naming issues for DTO files (likely auto-generated)
    - path: pkg/dto/
      linters:
        - revive
      text: "var-naming"
    # Exclude naming issues for main.go (demo code)
    - path: main\.go
      linters:
        - revive
        - gocognit
        - gocritic
        - govet
        - gocyclo
        - unused
        - whitespace
      text: "(var-naming|cognitive complexity|underref|shadow|cyclomatic complexity|is unused|unnecessary trailing newline)"
    # Exclude some API client issues (existing code)
    - path: pkg/api/
      linters:
        - revive
        - gocritic
        - gocyclo
        - govet
        - goconst
      text: "(var-naming|commentedOutCode|httpNoBody|ptrToRefParam|cyclomatic complexity|shadow|string.*has.*occurrences)"
    # Exclude security warnings for protobuf generated files
    - path: ".*\\.pb\\.go$"
      linters:
        - gosec
      text: "(G103|Use of unsafe calls should be audited)"

  max-issues-per-linter: 0
  max-same-issues: 0

output:
  formats:
    - format: colored-line-number
  print-issued-lines: true
  print-linter-name: true